{"version":3,"sources":["components/AboutUs.tsx","actions/actionConstant.ts","actions/contactusAction.ts","reducers/ContacUsReducer.ts","components/ContactUs.tsx","actions/appAction.ts","components/OfflineComponent.tsx","reducers/IntroPagesReducer.ts","components/PageListComponent.tsx","components/Pages.tsx","components/PageViewer.tsx","components/TimeComponent.tsx","App.tsx","Entities/PageIntroInfo.ts","apis/PagesApi.ts","apis/BaseApi.ts","actions/IntroPagesAction.ts","registerServiceWorker.ts","reducers/appReducer.ts","Store/store.ts","index.tsx"],"names":["_super","AboutUs","tslib_es6","prototype","render","document","title","react","FETCH_INTROPAGES_SUCCESS","FETCH_INTROPAGES_FAIL","SITE_IS_OFFLINE","SITE_IS_ONLINE","CONTACT_US_CHANGE_NAME","CONTACT_US_CHANGE_EMAIL","CONTACT_US_CHANGE_DESC","ChangeNameAction","name","Name","type","ChangeDescAction","desc","Desc","ChangeEmailAction","email","Email","initState","getName","state","getEmail","getDesc","ContactUs_ContactUs","ContactUs","props","_this","call","this","Send","bind","blurHandlingForEmail","blurHandlingForName","changeHanhleing","blurHandlingForDesc","event","ChangeName","target","value","ChangeEmail","ChangeDesc","alert","className","onChange","onBlur","placeholder","rows","id","onClick","components_ContactUs","Object","es","contactusState","dispatch","redux","APPIsOnline","AppIsOffline","APPIsOffline","getAppIsOffline","isOffline","OfflineComponent_OfflineComponent","OfflineComponent","AppIsOffEvent","AppIsOnEvent","console","log","changeToOffline","changeToOnline","componentWillmount","window","addEventListener","componentwillunmount","removeEventListener","appIsOffline","components_OfflineComponent","appMainState","ownProps","IntroPagesReducer_initState","error","items","loaded","getIntroPages","getError","getLoaded","PageListComponent_PageListComponent","PageListComponent","map","info","index","key","IsNew","src","IntroImg","onError","elem","currentTarget","alt","Title","react_router_dom","to","IntroInfo","components_PageListComponent","introPageState","Pages","PageViewer","match","params","TimeComponent","componentDidMount","that","interval","setInterval","setTime","componentWillUnmount","time","setState","Date","toLocaleTimeString","src_App_0","App","menuIsOpen","menuOnClick","menuDropdownRef","jquery","current","hide","show","basename","components_TimeComponent","ref","react_router","exact","path","component","components_Pages","components_AboutUs","components_PageViewer","PagesApi","GetIntroInfoList","Promise","resolver","reactPage","Entities_PageIntroInfo","p2","p3","p4","jsPage","p6","p7","nodePage","BaseApi","axiosObj","axios_default","a","create","baseURL","get","url","data","then","response","path_browserify","catch","q","post","config","FetchIntroPagesByApi","undefined","apis_PagesApi","err","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","appReducer_initState","rootReaducer","action","appStore","redux_thunk_es","rootElement","getElementById","react_dom","store","URL","toString","origin","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.434c6681.chunk.js","sourcesContent":["import * as React from 'react'\r\n\r\nexport default class AboutUs extends React.Component {\r\n    public render() {\r\n        document.title = \"About Learning Site\";\r\n\r\n        return (<div>about us ... </div>)\r\n    }\r\n}","\r\nexport const VIEW_PAGE = 'VIEW_PAGE';\r\nexport const FETCH_INTROPAGES_SUCCESS = \"FETCH_INTROPAGES_SUCCESS\";\r\nexport const FETCH_INTROPAGES_FAIL = \"FETCH_INTROPAGES_FAIL\";\r\n\r\nexport const SITE_IS_OFFLINE = \"SITE_IS_OFFLINE\";\r\nexport const SITE_IS_ONLINE = \"SITE_IS_ONLINE\";\r\n\r\nexport const CONTACT_US_CHANGE_NAME = \"CONTACT_US_CHANGE_NAME\"\r\nexport const CONTACT_US_CHANGE_EMAIL = \"CONTACT_US_CHANGE_EMAIL\"\r\nexport const CONTACT_US_CHANGE_DESC = \"CONTACT_US_CHANGE_DESC\"\r\n","import { CONTACT_US_CHANGE_DESC, CONTACT_US_CHANGE_EMAIL, CONTACT_US_CHANGE_NAME } from './actionConstant';\r\nimport { IContactUsChangeDescAction, IContactUsChangeEmailAction, IContactUsChangeNameAction } from './actionTypes';\r\n\r\nexport function ChangeNameAction(name: string): IContactUsChangeNameAction {\r\n    return {\r\n        Name: name,\r\n        type: CONTACT_US_CHANGE_NAME,\r\n    }\r\n}\r\n\r\nexport function ChangeDescAction(desc: string): IContactUsChangeDescAction {\r\n    return {\r\n        Desc: desc,\r\n        type: CONTACT_US_CHANGE_DESC,\r\n    }\r\n}\r\n\r\nexport function ChangeEmailAction(email: string): IContactUsChangeEmailAction {\r\n    return {\r\n        Email: email,\r\n        type: CONTACT_US_CHANGE_EMAIL,\r\n    }\r\n}","import { CONTACT_US_CHANGE_DESC, CONTACT_US_CHANGE_EMAIL, CONTACT_US_CHANGE_NAME } from 'src/actions/actionConstant';\r\nimport { ContactUsActionType } from 'src/actions/actionTypes';\r\nimport { IContacUsState } from 'src/Store/AllStates';\r\n\r\nconst initState: IContacUsState = {\r\n    Desc: \"\",\r\n    Email: \"\",\r\n    Name: \"\",\r\n\r\n};\r\n\r\nexport function ContactUsProducer(state: IContacUsState = initState, action: ContactUsActionType) {\r\n\r\n    switch (action.type) {\r\n        case CONTACT_US_CHANGE_NAME:\r\n            return {\r\n                ...state,\r\n                Name: action.Name,\r\n            }\r\n        case CONTACT_US_CHANGE_EMAIL:\r\n            return {\r\n                ...state,\r\n                Email: action.Email,\r\n            }\r\n        case CONTACT_US_CHANGE_DESC:\r\n            return {\r\n                ...state,\r\n                Desc: action.Desc,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getName = (state: IContacUsState) => state.Name;\r\nexport const getEmail = (state: IContacUsState) => state.Email;\r\nexport const getDesc = (state: IContacUsState) => state.Desc;\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { ChangeDescAction, ChangeEmailAction, ChangeNameAction } from 'src/actions/contactusAction';\r\nimport { getDesc, getEmail, getName } from 'src/reducers/ContacUsReducer';\r\nimport { IContacUsState } from 'src/Store/AllStates';\r\nimport { IAppState } from 'src/Store/store';\r\n\r\ninterface IContacUsProps {\r\n    Name: string,\r\n    Email: string,\r\n    Desc: string,\r\n    ChangeName: (name: string) => void;\r\n    ChangeEmail: (email: string) => void;\r\n    ChangeDesc: (desc: string) => void;\r\n}\r\n\r\nclass ContactUs extends React.Component<IContacUsProps, IContacUsState> {\r\n\r\n    constructor(props: IContacUsProps) {\r\n        super(props);\r\n\r\n        this.Send = this.Send.bind(this);\r\n        this.blurHandlingForEmail = this.blurHandlingForEmail.bind(this);\r\n        this.blurHandlingForName = this.blurHandlingForName.bind(this);\r\n        this.changeHanhleing = this.changeHanhleing.bind(this);\r\n        this.blurHandlingForDesc = this.blurHandlingForDesc.bind(this);\r\n    }\r\n\r\n    // tslint:disable-next-line: no-empty\r\n    public changeHanhleing(event: React.ChangeEvent<HTMLInputElement>) {\r\n\r\n    }\r\n    public blurHandlingForName(event: React.FocusEvent<HTMLInputElement>) {\r\n        this.props.ChangeName(event.target.value);\r\n    }\r\n\r\n    public blurHandlingForEmail(event: React.FocusEvent<HTMLInputElement>) {\r\n        this.props.ChangeEmail(event.target.value);\r\n    }\r\n\r\n    public blurHandlingForDesc(event: React.FocusEvent<HTMLTextAreaElement>) {\r\n        this.props.ChangeDesc(event.target.value);\r\n    }\r\n\r\n    public Send() {\r\n        alert(\"Thanks \" +this.props.Name);\r\n    }\r\n\r\n    public render() {\r\n        document.title = \"Countact us\";\r\n\r\n        return (<div className=\"contact-us-form\" ><div className=\"desc-top\">Please send to us, your opinins and suggestions. </div>\r\n            <div className=\"form-group\">\r\n                <label>Name\r\n\r\n                <input className=\"form-control\" onChange={this.changeHanhleing}\r\n                        onBlur={this.blurHandlingForName} type=\"text\" placeholder=\"please enter your name.\" />\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Email\r\n                <input className=\"form-control\" type=\"email\" onBlur={this.blurHandlingForEmail}\r\n                        onChange={this.changeHanhleing} placeholder=\"please enter your Email.\" />\r\n\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Description\r\n                <textarea className=\"form-control\" rows={5} onBlur={this.blurHandlingForDesc}\r\n                        placeholder=\"please enter your description.\" />\r\n\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"button\" id=\"sendBtn\" value=\"Send\" onClick={this.Send} />   </div>\r\n        </div>)\r\n    }\r\n}\r\nconst mapStateToProps = (state: IAppState) => {\r\n    return {\r\n        Desc: getDesc(state.contactusState),\r\n        Email: getEmail(state.contactusState),\r\n        Name: getName(state.contactusState),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\r\n    ChangeDesc: ChangeDescAction,\r\n    ChangeEmail: ChangeEmailAction,\r\n    ChangeName: ChangeNameAction,\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactUs);","import { IAppMainState } from 'src/Store/AllStates';\r\nimport { SITE_IS_OFFLINE, SITE_IS_ONLINE } from './actionConstant';\r\nimport {  IAppIsOfflineAction, IAppIsOnlineAction } from './actionTypes';\r\n\r\nexport function APPIsOnline(): IAppIsOnlineAction {\r\n\r\n    return {\r\n        AppIsOffline: false,\r\n        type: SITE_IS_ONLINE,\r\n    };\r\n\r\n}\r\n\r\nexport function APPIsOffline(): IAppIsOfflineAction {\r\n\r\n    return {\r\n        AppIsOffline: true,\r\n        type: SITE_IS_OFFLINE,\r\n    }\r\n}\r\n\r\nexport const getAppIsOnline = (state: IAppMainState) => state.isOffline === false;\r\nexport const getAppIsOffline = (state: IAppMainState) => state.isOffline === true;\r\n","import \"bootstrap/scss/bootstrap.scss\"\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { IAppState } from 'src/Store/store';\r\nimport { APPIsOffline, APPIsOnline, getAppIsOffline } from '../actions/appAction';\r\nimport { IAppMainState } from '../Store/AllStates';\r\n\r\ninterface IOfflineComponentProps {\r\n    appIsOffline?: boolean;\r\n    changeToOffline?: () => void;\r\n    changeToOnline?: () => void;\r\n}\r\n\r\nclass OfflineComponent extends React.Component<IOfflineComponentProps, IAppMainState> {\r\n\r\n    constructor(props: IOfflineComponentProps) {\r\n        super(props);\r\n        this.AppIsOffEvent = this.AppIsOffEvent.bind(this);\r\n        this.AppIsOnEvent = this.AppIsOnEvent.bind(this);\r\n    }\r\n\r\n    public AppIsOffEvent() {\r\n        // tslint:disable-next-line: no-console\r\n        console.log(\"AppIsOffEvent\")\r\n        if (this.props.changeToOffline) {\r\n            this.props.changeToOffline();\r\n        }\r\n    }\r\n\r\n    public AppIsOnEvent() {\r\n        // tslint:disable-next-line: no-console\r\n        console.log(\"AppIsOnEvent\")\r\n\r\n        if (this.props.changeToOnline) {\r\n            this.props.changeToOnline();\r\n        }\r\n    }\r\n\r\n    public componentWillmount() {\r\n        window.addEventListener(\"offline\", () => this.AppIsOffEvent());\r\n        window.addEventListener(\"online\", () => this.AppIsOnEvent());\r\n\r\n    }\r\n\r\n    public componentwillunmount() {\r\n        window.removeEventListener(\"offline\", this.AppIsOffEvent);\r\n        window.removeEventListener(\"online\", this.AppIsOnEvent);\r\n\r\n    }\r\n    public render() {\r\n\r\n        return (\r\n            <div className={this.props.appIsOffline ? \"App-Is-Offline\" : \"App-Is-Online\"} > Note: Site is offline.</div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any, ownProps: IOfflineComponentProps) => bindActionCreators({\r\n    changeToOffline: APPIsOffline,\r\n    changeToOnline: APPIsOnline,\r\n}, dispatch);\r\n\r\nconst mapStateToProps = (state: IAppState) => (\r\n    {\r\n        appIsOffline: getAppIsOffline(state.appMainState),\r\n    }\r\n)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OfflineComponent)\r\n","import { IntroPagesActionTypes } from 'src/actions/actionTypes';\r\nimport { IIntroPagesState } from 'src/Store/AllStates';\r\nimport { FETCH_INTROPAGES_FAIL, FETCH_INTROPAGES_SUCCESS } from '../actions/actionConstant';\r\n\r\n\r\nconst initState: IIntroPagesState = {\r\n    error: \"\",\r\n    items: [],\r\n    loaded: false,\r\n}\r\n\r\nexport default function IntroPagesRoducer(state = initState, action: IntroPagesActionTypes) {\r\n    switch (action.type) {\r\n        case FETCH_INTROPAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                items: action.items,\r\n                loaded: action.loaded,\r\n            }\r\n        case FETCH_INTROPAGES_FAIL:\r\n            return {\r\n                ...state,\r\n                items: [],\r\n                loaded: action.loaded,\r\n                // tslint:disable-next-line: object-literal-sort-keys\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getIntroPages = (state: IIntroPagesState) => state.items;\r\nexport const getError = (state: IIntroPagesState) => state.error;\r\nexport const getLoaded = (state: IIntroPagesState) => state.loaded;\r\n","import 'bootstrap/dist/css/bootstrap.css'\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport { connect } from 'react-redux';\n// import { bindActionCreators } from 'redux';\n// import { FetchIntroPagesByApi } from 'src/actions/IntroPagesAction';\nimport PageIntroInfo from 'src/Entities/PageIntroInfo';\nimport { getError, getIntroPages, getLoaded } from 'src/reducers/IntroPagesReducer';\nimport { IIntroPagesState } from 'src/Store/AllStates';\nimport { IAppState } from 'src/Store/store';\nimport '../styles/PageComponent.scss'\n\ninterface IProps {\n  error: string,\n  items: PageIntroInfo[],\n  loaded: boolean,\n  // loadData: () => void,\n}\n\nclass PageListComponent extends React.Component<IProps, IIntroPagesState> {\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <div className=\"row page-container\">\n        {this.props.items.map((info, index) => {\n          return <div key={index} className=\"col-sm-4\">\n            <div className=\"page-item\">\n              <div className={info.IsNew !== true ? \"new-badge-hidden\" : \"new-badge\"} >\n                <span className=\"rotate-span\">New</span></div>\n              <div className=\"page-item-header\">\n                <img src={process.env.PUBLIC_URL + '/images/' + info.IntroImg}\n                  // tslint:disable-next-line: jsx-no-lambda\n                  onError={(elem) => elem.currentTarget.className = \"img-not-found\"} className=\"page-item-img\" alt={info.Title} />\n                <div className=\"page-item-title\">\n                  <NavLink\n                    key={index} to={'/Page/' + info.Title} >{info.Title}</NavLink>\n                </div>\n\n              </div>\n\n              <div className=\"page-item-info\" >{info.IntroInfo}</div>\n            </div>\n          </div>\n        })}\n      </div>\n    );\n  }\n}\n/*\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({\n  loadData: FetchIntroPagesByApi\n}, dispatch);\n*/\nconst mapStateToProps = (state: IAppState) => (\n  {\n    error: getError(state.introPageState),\n    items: getIntroPages(state.introPageState),\n    loaded: getLoaded(state.introPageState)\n  }\n)\n\nexport default connect(mapStateToProps)(PageListComponent)","import * as React from'react'\r\nimport PageListComponent from './PageListComponent'\r\n\r\nexport default class Pages extends React.Component{\r\n\r\n    public render(){\r\n\r\n        return (\r\n            \r\n            <PageListComponent/>\r\n            \r\n        )\r\n    }\r\n}","import * as React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { IPageViewProps } from 'src/Entities/Interfaces';\r\n\r\nexport default class PageViewer extends React.Component<IPageViewProps>{\r\n\r\n        public render() {\r\n                document.title = this.props.match.params.Name;\r\n                return (<div className=\"page-viewer-container\"><h3>\r\n                        {this.props.match.params.Name}\r\n                </h3>\r\n                        <p>\r\n\r\n                                kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n                                lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n                                kkjfkdsfddskfjdsf\r\n                                kkjf dsfj\r\n        </p>\r\n                        <p>\r\n\r\n                                kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n                                lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n                                kkjfkdsfddskfjdsf\r\n                                kkjf dsfj\r\n        </p>\r\n                        <p>\r\n\r\n                                kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n                                lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n                                kkjfkdsfddskfjdsf\r\n                                kkjf dsfj\r\n        </p>\r\n                        <p>\r\n                                5\r\n                                        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n                                        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n                                        kkjfkdsfddskfjdsf\r\n                                        kkjf dsfj\r\n        </p>\r\n                        <p>\r\n                                4\r\n                                        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n                                        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n                                        kkjfkdsfddskfjdsf\r\n                                        kkjf dsfj\r\n        </p>\r\n                        <p>\r\n                                3\r\n                                        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n                                        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n                                        kkjfkdsfddskfjdsf\r\n                                        kkjf dsfj\r\n        </p>\r\n\r\n                        <p>\r\n                                2\r\n                                        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n                                        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n                                        kkjfkdsfddskfjdsf\r\n                                        kkjf dsfj\r\n        </p>\r\n                        <p>\r\n                                1\r\n                                        kjfkd lkjldsf ddklfj sdf jfdskfjs kfjdsk\r\n                                        lkjf kdsf ldkfj dskfkj fjdsklfjdsfkl dsfkljdsf kfjdf djf dkfd fjdsf dsjkf\r\n                                        kkjfkdsfddskfjdsf\r\n                                        kkjf dsfj\r\n        </p>\r\n\r\n                        <hr />\r\n                        <Link to=\"/\" >Home</Link>\r\n\r\n                </div>)\r\n        }\r\n}","import * as React from 'react'\r\ninterface ITimeState{\r\n   time:string;\r\n}\r\nexport default class TimeComponent extends React.Component<{},ITimeState> {\r\n    private static interval: any;\r\n   \r\n    public componentDidMount() {\r\n        const that = this;\r\n\r\n        TimeComponent.interval = setInterval(() => {\r\n            that.setTime();\r\n        }, 1000);\r\n    }\r\n    public componentWillUnmount() {\r\n        if (TimeComponent.interval) {\r\n            delete TimeComponent.interval;\r\n        }\r\n    }\r\n    public render() {\r\n        return (<div className=\"time-container\">{this.state ? this.state.time: \"\"}</div>)\r\n    }\r\n    private setTime() {\r\n        this.setState({time:new Date().toLocaleTimeString()});\r\n    }\r\n}","import \"bootstrap/scss/bootstrap.scss\"\nimport * as $ from 'jquery'\nimport * as React from 'react';\nimport { Link } from 'react-router-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.scss';\nimport AboutUs from './components/AboutUs';\nimport ContactUs from './components/ContactUs';\nimport OfflineComponent from './components/OfflineComponent'\nimport Pages from './components/Pages'\nimport PageViewer from './components/PageViewer';\nimport TimeComponent from './components/TimeComponent'\n\nclass App extends React.Component {\n  private menuDropdownRef: any;\n  private menuIsOpen: boolean = false;\n  constructor(props: any) {\n    super(props);\n    this.menuOnClick = this.menuOnClick.bind(this);\n    this.menuDropdownRef = React.createRef();\n  }\n\n  public menuOnClick() {\n    if (!this.menuIsOpen) {\n      $(this.menuDropdownRef.current).show();\n      this.menuIsOpen = true;\n    }\n    else {\n      $(this.menuDropdownRef.current).hide();\n      this.menuIsOpen = false;\n    }\n  }\n\n  public render() {\n    return (\n      <Router basename=\"/ReactSampleDemo\">\n\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1 className=\"App-title\">React App Demo</h1>\n            <div className=\"title\">\n              <div className=\"app-time\">\n                <TimeComponent />\n              </div>\n            </div>\n          </header>\n          <div className=\"app-menubar \">\n            <div className=\"menu-icon \" onClick={this.menuOnClick}>.</div>\n            <div className=\"row\" ref={this.menuDropdownRef}>\n              <div className=\"col-4\">\n                <Link to=\"/\" >Home</Link>\n              </div>\n              <div className=\"col-4\">\n                <Link to=\"/ContactUs\" >ContactUs</Link></div>\n              <div className=\"col-4\">\n                <Link to=\"/AboutUs\" >AboutUs</Link></div>\n            </div>\n          </div>\n          <div className=\"pages-container\">\n            <Route exact={true} path=\"/\" component={Pages} />\n            <Route path=\"/ContactUs\" component={ContactUs} />\n            <Route path=\"/AboutUs\" component={AboutUs} />\n            <Route path=\"/Page/:Name\" component={PageViewer} />\n          </div>\n          <OfflineComponent />\n          <div className=\"App-footer\">@Copy right</div>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","export default class PageIntroInfo{\r\n    public IntroImg:string;\r\n    public IntroInfo:string;\r\n    public Title:string;\r\n    public IsNew:boolean;\r\n\r\n}","import PageIntroInfo from 'src/Entities/PageIntroInfo';\r\nimport BaseApi from './BaseApi';\r\n\r\nexport default class PagesApi extends BaseApi{\r\n\r\n   public async GetIntroInfoList()\r\n   {\r\n       return new Promise<PageIntroInfo[]>((resolver:any)=>{\r\n        const reactPage = new PageIntroInfo();\r\n        reactPage.Title=\"React\";\r\n        reactPage.IntroInfo=\"about creating a React project.\";\r\n        reactPage.IntroImg=\"React.png\";\r\n        reactPage.IsNew=true;\r\n\r\n        const p2 = new PageIntroInfo();\r\n        p2.Title=\"Angular\";\r\n        p2.IntroInfo=\"about creating a Angular project.\";\r\n        p2.IntroImg=\"Angular.png\";\r\n\r\n        const p3 = new PageIntroInfo();\r\n        p3.Title=\"typescript\";\r\n        p3.IntroInfo=\"about creating a typescript project.\";\r\n        p3.IntroImg=\"ts.png\";\r\n\r\n        const p4 = new PageIntroInfo();\r\n        p4.Title=\"web Api\";\r\n        p4.IntroInfo=\"about creating a web api project.\";\r\n        p4.IntroImg=\"\";\r\n\r\n        const jsPage = new PageIntroInfo();\r\n        jsPage.Title=\"javascript\";\r\n        jsPage.IntroInfo=\"about creating a javascript project.\";\r\n        jsPage.IntroImg=\"js.png\";\r\n\r\n        const p6 = new PageIntroInfo();\r\n        p6.Title=\"jquery\";\r\n        p6.IntroInfo=\"about creating a jquery project.\\n\\t this is atemplatefor new project.\";\r\n        p6.IntroImg=\"\";\r\n\r\n        const p7 = new PageIntroInfo();\r\n        p7.Title=\"Vue\";\r\n        p7.IntroInfo=\"about creating a Vue project.\\n\\t this is sample new project.\";\r\n        p7.IntroImg=\"Vue.png\";\r\n        p7.IsNew=true;\r\n\r\n\r\n        const nodePage = new PageIntroInfo();\r\n        nodePage.Title=\"Node.js\";\r\n        nodePage.IntroInfo=\"about how to use and install Node.\";\r\n        nodePage.IntroImg=\"node.png\";\r\n        resolver( [jsPage,nodePage,reactPage,p6,p7,p2,p3,p4]);\r\n       });\r\n   }\r\n}","import axios from 'axios'\r\nimport { resolve } from 'path';\r\nimport { reject } from 'q';\r\n\r\nexport default class BaseApi {\r\n\r\n    private axiosObj = axios.create({\r\n        baseURL: \"\"\r\n    });\r\n\r\n    public get(url: string, data: any) {\r\n        this.axiosObj.get(url)\r\n            .then((response: any) => {\r\n                resolve(response);\r\n            })\r\n            .catch(error => {\r\n                reject(error);\r\n            });\r\n    }\r\n\r\n    public post(url: string, config: any) {\r\n\r\n        this.axiosObj.post(url,config)\r\n            .then((response: any) => {\r\n                resolve(response);\r\n            })\r\n            .catch(error => {\r\n                reject(error);\r\n            });\r\n    }\r\n}","import axios from 'axios'\r\nimport { ActionCreator, Dispatch } from 'redux'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport PagesApi from 'src/apis/PagesApi';\r\nimport PageIntroInfo from 'src/Entities/PageIntroInfo';\r\nimport { IIntroPagesState } from 'src/Store/AllStates';\r\nimport { FETCH_INTROPAGES_FAIL, FETCH_INTROPAGES_SUCCESS } from './actionConstant';\r\nimport { IntroPagesActionTypes } from './actionTypes';\r\n\r\n\r\nexport const FetchIntroPages: ActionCreator<ThunkAction<Promise<any>, IIntroPagesState, null, IntroPagesActionTypes>> = () => {\r\n\r\n    return async (dispatch: Dispatch) => {\r\n        const response = await axios.get(\"\");\r\n        dispatch({\r\n            items: response.data,\r\n            loaded: true,\r\n            type: FETCH_INTROPAGES_SUCCESS,\r\n        })\r\n    }\r\n}\r\n\r\nexport const FetchIntroPagesByApi: ActionCreator<\r\n    ThunkAction<Promise<any>, IIntroPagesState, null, IntroPagesActionTypes>> = () => {\r\n\r\n        return async (dispatch: Dispatch) => {\r\n            const pagesApi = new PagesApi();\r\n            pagesApi.GetIntroInfoList()\r\n                .then((data: PageIntroInfo[]) => {\r\n                    dispatch({\r\n                        items: data,\r\n                        loaded: true,\r\n                        type: FETCH_INTROPAGES_SUCCESS,\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    dispatch({\r\n                        error: err,\r\n                        loaded: false,\r\n                        type: FETCH_INTROPAGES_FAIL\r\n                    })\r\n                });\r\n        }\r\n    }","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SITE_IS_OFFLINE, SITE_IS_ONLINE } from 'src/actions/actionConstant';\r\nimport { AppActionTypes } from 'src/actions/actionTypes';\r\nimport { IAppMainState } from 'src/Store/AllStates';\r\n\r\nconst initState: IAppMainState = {\r\n    isOffline: false,\r\n};\r\n\r\nexport function AppReducer(state: IAppMainState = initState, action: AppActionTypes) {\r\n    switch (action.type) {\r\n        case SITE_IS_ONLINE:\r\n            return {\r\n                ...state,\r\n                isOffline: false,\r\n            }\r\n        case SITE_IS_OFFLINE:\r\n            return {\r\n                ...state,\r\n                isOffline: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { AppReducer } from 'src/reducers/appReducer';\r\nimport { ContactUsProducer } from 'src/reducers/ContacUsReducer';\r\nimport IntroPagesReducer from '../reducers/IntroPagesReducer'\r\nimport { IAppMainState, IContacUsState, IIntroPagesState } from './AllStates';\r\n\r\nexport interface IAppState {\r\n    appMainState: IAppMainState,\r\n    introPageState: IIntroPagesState,\r\n    contactusState: IContacUsState,\r\n}\r\n\r\nconst rootReaducer = combineReducers<IAppState>({\r\n    appMainState: AppReducer,\r\n    contactusState: ContactUsProducer,\r\n    introPageState: IntroPagesReducer,\r\n});\r\n\r\nexport function configStore(): Store<IAppState, any> {\r\n    const store = createStore(rootReaducer, applyMiddleware(thunk));\r\n    return store;\r\n}\r\n\r\nexport const appStore = configStore();","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\n\nimport { FetchIntroPagesByApi } from './actions/IntroPagesAction';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport { appStore } from './Store/store';\n\nfunction initApp() {\n  appStore.dispatch(FetchIntroPagesByApi());\n}\nconst rootElement = document.getElementById('root');\ninitApp();\nReactDOM.render(\n  <Provider store={appStore}>\n    <App />\n  </Provider>,\n  rootElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}